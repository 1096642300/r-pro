{"version":3,"sources":["views/article/index.js"],"names":["ButtonGroup","Group","Text","titleDisplayMap","id","title","amount","author","currentAt","index","state","dataSource","columns","total","loading","limited","offset","isDeleteArticleModelShow","deleteArticleTitle","deleteArticleLoding","deleteArticleId","createColums","columnsKey","map","item","render","text","record","placement","color","key","moment","format","dataIndex","push","onClick","toEdit","bind","size","type","deleteArticle","props","history","pathname","localStorage","setItem","JSON","stringify","setState","onCancel","onOk","deleteArticleById","then","res","getData","finally","getArticle","Object","keys","list","handleChange","page","pageSize","toExcel","data","i","length","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","this","extra","rowKey","pagination","current","position","hideOnSinglePage","showQuickJumper","pageSizeOptions","onChange","visible","confirmLoading","cancelText","okText","centered","maskClosable","delete","Component"],"mappings":"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","file":"static/js/10.30a03784.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card,Button,Table,Tag,Tooltip,Modal,Typography} from \"antd\"\r\nimport {getArticle,deleteArticleById} from \"../../request\"\r\nimport moment from \"moment\"\r\nimport XLSX from \"xlsx\"\r\nconst ButtonGroup = Button.Group\r\nconst {Text} = Typography\r\nconst titleDisplayMap = {\r\n    id:\"id\",\r\n    title:\"标题\",\r\n    amount:\"阅读量\",\r\n    author:\"作者\",\r\n    currentAt:\"创建时间\"\r\n}\r\nexport default class index extends Component {\r\n    state = {\r\n        dataSource:[], //定义初始化的数据源\r\n        columns: [],  //定义初始化的列\r\n        total:0, //总数\r\n        loading:false,  //代表表格loading初始化加载状态\r\n        limited:10, //代表每一页的数量\r\n        offset:0,    //开始的条数    0-9第一页  10-19第二页  20-29第三页\r\n        isDeleteArticleModelShow:false,  //模态窗口默认不显示\r\n        deleteArticleTitle:\"\",//删除文章的title\r\n        deleteArticleLoding:false, //删除文章确认的loading\r\n        deleteArticleId:\"\" //删除文章的Id\r\n    }\r\n\r\n    //创建列的代码\r\n    createColums = columnsKey=>{\r\n        const columns =  columnsKey.map(item=>{ \r\n            //如果说是阅读量的话\r\n            if(item === \"amount\"){\r\n                return {\r\n                    title: titleDisplayMap[item],   \r\n                    render:(text, record, index)=>{\r\n                        let {amount} = record;\r\n                        return <Tooltip placement={amount>230?\"top\":\"bottom\"} title={amount>230?\"高于230\":\"低于230\"}>\r\n                                <Tag color={amount>230?'green':'red'}>{amount}</Tag>\r\n                            </Tooltip> \r\n                        \r\n                    },\r\n                    key: item,\r\n                }\r\n            }\r\n            //如果是时间的话\r\n            if(item===\"currentAt\"){\r\n                return {\r\n                    title: titleDisplayMap[item], \r\n                    render:(text,record,index)=>{\r\n                        let {currentAt} = record\r\n                        return moment(currentAt).format(\"YYYY年MM月DD日 HH:mm:ss\")\r\n                    },\r\n                    key:item\r\n                }\r\n            }\r\n            return {\r\n                title: titleDisplayMap[item],     \r\n                dataIndex: item,  //使dataSource里面的数据与每一列相对应\r\n                key: item,\r\n            }\r\n        })\r\n        //现在要往columns再去添加两列\r\n        columns.push({\r\n            title:\"操作\",\r\n            key:\"action\",\r\n            render:(text,record)=>{\r\n                return (\r\n                    <ButtonGroup>\r\n                        <Button onClick={this.toEdit.bind(this,record)} size=\"small\" type=\"primary\">编辑</Button>\r\n                        <Button onClick={this.deleteArticle.bind(this,record)} size=\"small\" type=\"danger\">删除</Button>\r\n                    </ButtonGroup>\r\n                )\r\n            }\r\n        })\r\n        return columns;\r\n    }\r\n\r\n    //跳转到编辑页面\r\n    toEdit = (record)=>{\r\n        //通过编程式导航的方式进行跳转  隐式传参\r\n        this.props.history.push({\r\n            pathname:`/admin/article/edit/${record.id}`,\r\n            state:{\r\n                title:record.title\r\n            }\r\n        })      \r\n        localStorage.setItem(\"title\",JSON.stringify(record))  \r\n    }\r\n\r\n\r\n    //删除文章\r\n    deleteArticle = (record)=>{\r\n        // console.log(record.id)\r\n        // Modal.confirm({\r\n        //     title:\"注意！此项要删除了~\",\r\n        //     // content:`确定要删除 <span style='color:red'>${record.title}</span>文章吗？`\r\n        //     content:<>确定要删除<Text type=\"danger\" delete>{record.title}</Text>文章吗？</>,\r\n        //     onOk:()=>{\r\n        //         // console.log(\"ok\")\r\n        //         deleteArticleById(record.id).then(res=>{\r\n        //             console.log(res)\r\n        //         })\r\n        //     }\r\n        // })\r\n\r\n        this.setState({\r\n            isDeleteArticleModelShow:true,\r\n            deleteArticleTitle:record.title,\r\n            deleteArticleId:record.id\r\n        })\r\n    }\r\n\r\n    //取消的方法\r\n    onCancel = ()=>{\r\n        this.setState({\r\n            isDeleteArticleModelShow:false\r\n        })\r\n    }\r\n    //确定的方法\r\n    onOk = ()=>{\r\n        this.setState({deleteArticleLoding:true})\r\n        deleteArticleById(this.state.deleteArticleId).then(res=>{\r\n            //删除完毕后，是回到首页呢还是继续停在当前页？\r\n            this.setState({\r\n                offset:0 //回到首页\r\n            },()=>{\r\n                this.getData()\r\n            })\r\n        }).finally(()=>{\r\n            this.setState({\r\n                deleteArticleLoding:false,\r\n                isDeleteArticleModelShow:false\r\n            })\r\n        })\r\n    }\r\n\r\n    getData = ()=>{\r\n        //发起ajax请求的时候，需要加载loading\r\n        this.setState({loading:true})\r\n        getArticle(this.state.offset,this.state.limited).then(res=>{\r\n            const columnsKey = Object.keys(res.list[0]) //[\"id\",\"title\",\"author\",\"amount\",\"currentAt\"]\r\n            const columns = this.createColums(columnsKey)\r\n            this.setState({\r\n                total:res.total,      //设置分页的数量\r\n                columns,              //设置列的数组\r\n                dataSource:res.list   //设置异步请求回来的数据\r\n            })\r\n        }).finally(()=>{\r\n            this.setState({loading:false}) //加载完成后，loading消失\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getData()\r\n    }\r\n    //点击每一页的时候触发\r\n    handleChange = (page, pageSize)=>{\r\n        this.setState({\r\n            limited:pageSize,\r\n            offset: pageSize * (page-1)\r\n        },()=>{\r\n            //需要注意！必须要等到状态更改完之后才能重新发起异步请求\r\n            this.getData()\r\n        })\r\n    }\r\n\r\n    //导出Excel\r\n    toExcel = ()=>{\r\n        //真实的项目场景开发中，前端发送ajax,后端传来一个文件地址，前端只需要点击下载就可以实现了。\r\n        const data = [Object.keys(this.state.dataSource[0])] // [[id,title,xxx]]\r\n        for(var i=0;i<this.state.dataSource.length;i++){ // [{id:1,title,XXX}]\r\n            //data.push(Object.values(this.state.dataSource[i])) //[1,\"XX\",300]\r\n            data.push([\r\n                this.state.dataSource[i].id,\r\n                this.state.dataSource[i].title,\r\n                this.state.dataSource[i].author,\r\n                this.state.dataSource[i].amount,\r\n                moment(this.state.dataSource[i].currentAt).format(\"YYYY年MM月DD日 HH:mm:ss\")\r\n            ])\r\n        }\r\n        const ws = XLSX.utils.aoa_to_sheet(data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\r\n        XLSX.writeFile(wb, `用户信息表-${this.state.offset/this.state.limited +1}页.xlsx`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card \r\n                title=\"文章列表\" \r\n                extra={<Button onClick={this.toExcel}>导出Excel表</Button>} \r\n            >\r\n                <Table \r\n                    dataSource={this.state.dataSource} \r\n                    columns={this.state.columns} \r\n                    rowKey={record=>record.id}  \r\n                    loading={this.state.loading}\r\n                    pagination={{\r\n                        current: this.state.offset/this.state.limited +1,    \r\n                        position:['bottomRight'],  //分页的位置\r\n                        total:this.state.total,\r\n                        // pageSize:1,\r\n                        hideOnSinglePage:true, //一页的时候不需要显示分页器\r\n                        showQuickJumper:true, //可以跳转到某一页\r\n                        pageSizeOptions:[\"10\",\"15\",\"20\",\"25\"],//可以指定每页显示多少条数据\r\n                        onChange:this.handleChange //点击每一页的时候触发\r\n                    }}\r\n                />\r\n                <Modal\r\n                    title=\"警告！此操作不可逆\"\r\n                    visible={this.state.isDeleteArticleModelShow}\r\n                    onCancel={this.onCancel}\r\n                    confirmLoading={this.state.deleteArticleLoding}\r\n                    onOk={this.onOk}\r\n                    cancelText=\"点错了，在看看\"\r\n                    okText=\"拜拜~\"\r\n                    centered={true}\r\n                    maskClosable={false}\r\n                >\r\n                    <>确定要删除<Text type=\"danger\" delete>{this.state.deleteArticleTitle}</Text>文章吗？</>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}