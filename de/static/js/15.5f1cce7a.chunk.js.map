{"version":3,"sources":["views/notifications/index.js"],"names":["index","connect","state","list","notifications","isLoading","markNotificationsById","markNotificationsAll","console","log","this","props","spinning","title","extra","disabled","every","item","hasRead","onClick","itemLayout","dataSource","renderItem","Item","Meta","dot","description","desc","bind","id","Component"],"mappings":"uRA2BMA,EADLC,aAPgB,SAAAC,GACb,MAAO,CACHC,KAAKD,EAAME,cAAcD,KACzBE,UAAUH,EAAME,cAAcC,aAIpB,CAACC,0BAAsBC,0B,0KAE3B,IAAD,OAEL,OADAC,QAAQC,IAAIC,KAAKC,OAEb,uBAAMC,SAAUF,KAAKC,MAAMN,WACvB,uBACIQ,MAAO,2BACPC,MAAO,uBACHC,SAAUL,KAAKC,MAAMR,KAAKa,OAAM,SAAAC,GAAI,OAAiB,IAAfA,EAAKC,WAC3CC,QAAST,KAAKC,MAAMJ,sBAFjB,+CAKP,uBACIa,WAAW,aACXC,WAAYX,KAAKC,MAAMR,KACvBmB,WAAY,SAAAL,GAAI,OACZ,sBAAMM,KAAN,KACI,sBAAMA,KAAKC,KAAX,CACIX,MAAO,uBAAOY,KAAMR,EAAKC,SAAUD,EAAKJ,OACxCa,YAAaT,EAAKU,OAErBV,EAAKC,QAAU,GAAK,uBAAQC,QAAS,EAAKR,MAAML,sBAAsBsB,KAAK,EAAKX,EAAKY,KAAjE,4C,GArBjCC,e,EA+BL9B","file":"static/js/15.5f1cce7a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card,Button,List,Badge,Spin} from \"antd\"\r\nimport {connect} from \"react-redux\"\r\nimport {markNotificationsById,markNotificationsAll} from \"../../actions/notifications\"\r\nconst data = [\r\n    {\r\n      title: 'Ant Design Title 1',\r\n    },\r\n    {\r\n      title: 'Ant Design Title 2',\r\n    },\r\n    {\r\n      title: 'Ant Design Title 3',\r\n    },\r\n    {\r\n      title: 'Ant Design Title 4',\r\n    },\r\n];\r\n\r\nconst mapState = state=>{\r\n    return {\r\n        list:state.notifications.list,\r\n        isLoading:state.notifications.isLoading\r\n    }\r\n}\r\n\r\n@connect(mapState,{markNotificationsById,markNotificationsAll})\r\nclass index extends Component {\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Spin spinning={this.props.isLoading}>\r\n                <Card\r\n                    title={\"通知中心\"}\r\n                    extra={<Button \r\n                        disabled={this.props.list.every(item=>item.hasRead===true)}\r\n                        onClick={this.props.markNotificationsAll}\r\n                    >全部标记为已读</Button>}\r\n                >\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={this.props.list}\r\n                        renderItem={item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta\r\n                                    title={<Badge dot={!item.hasRead}>{item.title}</Badge>}\r\n                                    description={item.desc}\r\n                                />\r\n                                {item.hasRead ? \"\" : <Button onClick={this.props.markNotificationsById.bind(this,item.id)}>标记为已读</Button>}\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                </Card>\r\n            </Spin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default index\r\n\r\n\r\n//every  some reduce filter map forEach xx\r\n// var arr = [{id:1,hasRead:true},{id:2,hasRead:true}]\r\n// console.log(arr.every(item=>item.hasRead===true))  //如果每一项都已读了，那么结果是true\r\n"],"sourceRoot":""}