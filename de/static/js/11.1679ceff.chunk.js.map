{"version":3,"sources":["views/article/Edit.js"],"names":["layout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","Edit","initEditor","editor","E","contentRef","current","customConfig","onchange","html","formRef","setFieldsValue","create","onFinish","values","setState","isLoading","currentAt","valueOf","saveArticleById","props","match","params","id","then","res","success","msg","finally","history","push","onFinishFailed","errorInfo","console","log","state","createRef","this","location","localStorage","getItem","getArticleDetailById","moment","txt","content","JSON","parse","title","extra","onClick","goBack","spinning","ref","name","initialValues","colon","hideRequiredMark","labelAlign","Item","label","rules","required","message","autoFocus","showTime","className","type","htmlType","Component"],"mappings":"uYAMMA,EAAS,CACXC,SAAS,CACLC,GAAG,CAACC,KAAK,IACTC,GAAG,CAACD,KAAK,IAEbE,WAAW,CACPH,GAAG,CAACC,KAAK,IACTC,GAAG,CAACD,KAAK,MAGXG,EAAa,CACfD,WAAY,CAAEE,OAAO,EAAGJ,KAAM,KAEbK,E,kDACjB,aAAc,IAAD,8BACT,gBAKJC,WAAa,WACT,EAAKC,OAAS,IAAIC,IAAE,EAAKC,WAAWC,SAEpC,EAAKH,OAAOI,aAAaC,SAAY,SAACC,GAElC,EAAKC,QAAQJ,QAAQK,eAAe,CAChC,QAAUF,KAGlB,EAAKN,OAAOS,UAfH,EA4CbC,SAAW,SAAAC,GAEP,EAAKC,SAAS,CAACC,WAAU,IAGzBF,EAAOG,UAAYH,EAAOG,UAAUC,UACpCC,YAAgB,EAAKC,MAAMC,MAAMC,OAAOC,GAAGT,GAAQU,MAAK,SAAAC,GAEpD,IAAQC,QAAQD,EAAIE,QACrBC,SAAQ,WACP,EAAKb,SAAS,CAACC,WAAU,IAEzB,EAAKI,MAAMS,QAAQC,KAAK,sBAxDnB,EA2DbC,eAAiB,SAAAC,GACbC,QAAQC,IAAI,UAAWF,IA1DvB,EAAKG,MAAQ,CAACnB,WAAU,GACxB,EAAKX,WAAa+B,sBAClB,EAAK1B,QAAU0B,sBAJN,E,gEAiBO,IAAD,OACXC,KAAKjB,MAAMkB,SAASH,OAAUI,aAAaC,QAAQ,UACnDH,KAAKjB,MAAMS,QAAQC,KAAK,kBAG5BO,KAAKnC,aAELmC,KAAKtB,SAAS,CAACC,WAAU,IAEzByB,YAAqBJ,KAAKjB,MAAMC,MAAMC,OAAOC,IAAIC,MAAK,SAAAC,GAClDQ,QAAQC,IAAIT,GACZA,EAAIR,UAAYyB,IAAOjB,EAAIR,WAE3B,EAAKP,QAAQJ,QAAQK,eAAec,GASpC,EAAKtB,OAAOwC,IAAIlC,KAAKgB,EAAImB,YAC1BhB,SAAQ,WACP,EAAKb,SAAS,CAACC,WAAU,S,+BAqBvB,IAAD,OACCmB,EAAQE,KAAKjB,MAAMkB,SAASH,OAASU,KAAKC,MAAMP,aAAaC,QAAQ,UAC3E,OACI,uBACIO,MAAOZ,GAASA,EAAMY,MACtBC,MAAO,uBAAQC,QAAS,kBAAI,EAAK7B,MAAMS,QAAQqB,WAAxC,iBAEP,uBAAMC,SAAUd,KAAKF,MAAMnB,WACvB,qCACJoC,IAAKf,KAAK3B,SACNjB,EAFA,CAGJ4D,KAAK,QACLC,cAAe,CAACP,MAAMZ,EAAMY,OAC5BlC,SAAUwB,KAAKxB,SACfkB,eAAgBM,KAAKN,eACrBwB,OAAO,EACPC,kBAAkB,EAClBC,WAAY,UAEZ,sBAAMC,KAAN,CACIC,MAAM,2BACNN,KAAK,QACLO,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,iCAG/B,uBAAOC,WAAS,KAEpB,sBAAML,KAAN,CACIC,MAAM,qBACNN,KAAK,SACLO,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,kCAG/B,6BAEJ,sBAAMJ,KAAN,CACIC,MAAM,eACNN,KAAK,SACLO,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,kCAG/B,6BAEJ,sBAAMJ,KAAN,CACIC,MAAM,2BACNN,KAAK,YACLO,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,qCAG/B,uBAAYE,UAAQ,KAExB,sBAAMN,KAAN,CACIC,MAAM,2BACNN,KAAK,UACLO,MAAO,CACH,CAAEC,UAAU,EAAMC,QAAS,mCAG/B,yBAAKG,UAAU,YAAYb,IAAKf,KAAKhC,cAGzC,sBAAMqD,KAAS3D,EACX,uBAAQmE,KAAK,UAAUC,SAAS,UAAhC,kB,GAjIcC,c","file":"static/js/11.1679ceff.chunk.js","sourcesContent":["import React, { Component,createRef } from 'react'\r\nimport { Form, Input, Button,Card,DatePicker,message,Spin } from 'antd';\r\nimport E from \"wangeditor\"\r\nimport \"./index.less\"\r\nimport {getArticleDetailById,saveArticleById} from \"../../request\"\r\nimport moment from 'moment';\r\nconst layout = {\r\n    labelCol:{\r\n        xs:{span:24},\r\n        sm:{span:4}\r\n    },\r\n    wrapperCol:{\r\n        xs:{span:24},\r\n        sm:{span:16}\r\n    }\r\n}\r\nconst tailLayout = {\r\n    wrapperCol: { offset:4, span: 16 },\r\n};\r\nexport default class Edit extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {isLoading:false}\r\n        this.contentRef = createRef()\r\n        this.formRef = createRef()\r\n    }\r\n    initEditor = ()=>{\r\n        this.editor = new E(this.contentRef.current) \r\n        //当富文本编辑器更改内容的时候\r\n        this.editor.customConfig.onchange =  (html)=> {\r\n            //获取到了富文本编辑器里面的内容了，就可以将其对于content字段进行设置了\r\n            this.formRef.current.setFieldsValue({\r\n                \"content\":html\r\n            })\r\n        }\r\n        this.editor.create()\r\n    }\r\n    componentDidMount(){\r\n        if(!this.props.location.state && !localStorage.getItem(\"title\")){\r\n            this.props.history.push(\"/admin/article\")\r\n        }\r\n        //初始化富文本编辑器\r\n        this.initEditor()\r\n        //初始化的时候需要isLoading变成true\r\n        this.setState({isLoading:true})\r\n        //异步请求文章详情\r\n        getArticleDetailById(this.props.match.params.id).then(res=>{\r\n            console.log(res)\r\n            res.currentAt = moment(res.currentAt)\r\n            //将表单的字段进行赋值 （title/content/author等）\r\n            this.formRef.current.setFieldsValue(res)\r\n            // this.formRef.current.setFieldsValue({\r\n            //     title:res.title,\r\n            //     amount:res.amount,\r\n            //     author:res.author,\r\n            //     currentAt:moment(res.currentAt),\r\n            //     content:res.content\r\n            // })\r\n            //给富文本编辑器设置内容\r\n            this.editor.txt.html(res.content)\r\n        }).finally(()=>{\r\n            this.setState({isLoading:false})\r\n        })\r\n    }\r\n    onFinish = values => {\r\n        //表单提交的时候需要将isLoading变成true\r\n        this.setState({isLoading:true})\r\n        //需要注意：values中的currentAt字段是moment对象，所以现在需要将moment对象转成时间戳，传给后端\r\n        // console.log('Success:', values.currentAt.valueOf());\r\n        values.currentAt = values.currentAt.valueOf()\r\n        saveArticleById(this.props.match.params.id,values).then(res=>{\r\n            //弹出保存文章成功\r\n            message.success(res.msg)\r\n        }).finally(()=>{\r\n            this.setState({isLoading:false})\r\n            //进行跳转到文章列表  路由跳转，相当于文章编辑组件被卸载了\r\n            this.props.history.push(\"/admin/article\")\r\n        })\r\n    };\r\n    onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    render() {\r\n        const state = this.props.location.state || JSON.parse(localStorage.getItem(\"title\"))\r\n        return (\r\n            <Card\r\n                title={state && state.title} \r\n                extra={<Button onClick={()=>this.props.history.goBack()}>返回</Button>} \r\n            >\r\n                <Spin spinning={this.state.isLoading}>\r\n                    <Form\r\n                ref={this.formRef}\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{title:state.title }}\r\n                onFinish={this.onFinish}\r\n                onFinishFailed={this.onFinishFailed}\r\n                colon={false}\r\n                hideRequiredMark={false}\r\n                labelAlign={\"right\"}\r\n            >\r\n                <Form.Item\r\n                    label=\"文章标题\"\r\n                    name=\"title\"\r\n                    rules={[\r\n                        { required: true, message: 'Please input article title!' },\r\n                    ]}\r\n                >\r\n                    <Input autoFocus />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"阅读量\"\r\n                    name=\"amount\"\r\n                    rules={[\r\n                        { required: true, message: 'Please input article amount!' },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"作者\"\r\n                    name=\"author\"\r\n                    rules={[\r\n                        { required: true, message: 'Please input article author!' },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"发布时间\"\r\n                    name=\"currentAt\"\r\n                    rules={[\r\n                        { required: true, message: 'Please input article currentAt!' },\r\n                    ]}\r\n                >\r\n                    <DatePicker showTime />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"文章内容\"\r\n                    name=\"content\"\r\n                    rules={[\r\n                        { required: true, message: 'Please input article content!' },\r\n                    ]}\r\n                >\r\n                    <div className=\"qf-editor\" ref={this.contentRef}></div>\r\n                </Form.Item>\r\n                \r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n                </Spin>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}